Summary findings for Questoin 5:

* I measure a board's difficulty in two ways. First, I see how long it
  takes for my program to find/disprove a solution in ms. Second, I count
  the number of recursive calls made to find/disprove a soltion. 
* The 'extremely hard' board is mystery1.dat, taking about 150-180ms
  to solve and upward of 400k recursive calls.
* The board without a solution is mystery2.dat; all possible moves were
  attempted in under 10ms (around 11k recursive calls).
* The mystery3.dat board takes just under 10ms and about 15k recursive
  calls to solve, making it the 'hard' board.

Briefly, my sudoku solver program is implemented in the following
way. Given an incomplete board, the first blank cell is found, and all
the legal moves for that cell are stored. The legal moves are then
played one by one in that cell. After a legal move is played, the same
process is repeated for the next empty cell. The recursion ends either if
all the cells are filled, or if there are no more legal moves to play
for a given blank cell.

Given the above, I propose that a board's difficulty is proportional
to the number of legal moves for the 'average' blank cell. More
legal moves mean that more possibilities need to be tried before a
solution is found (or disproved). Thus, I can simply find how long a
given board takes to solve to determine difficulty (by, for example,
taking timestamps at start and finish). Because the time it takes to
solvea board is dependent on how fast the machine running the program
is, I also count the number of recursive calls the solver makes. The
number of recursive calls needed to sovle should be the same for a
given board, regardless of the hardware running the solver.

My method generally tracks difficulty well -- the easy.dat board is
solved the quickest (2-3ms, 2k recursion calls) and the hardest board takes over
150ms and over 400k recursive calls. However, the hard board
(mystery3.dat) and the medium.dat board take the same time (and same
amount of recursive calls) to solve. This may be because the sudoku
boards were graded by  humans. Humans use different solving
strategies, which involve less brute force than the one descibed
above. So there will be some disagreement between
humans and the computer on whether a given board is just over or uner the
line for a given hardness category.  
